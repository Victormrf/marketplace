generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  name     String
  email    String  @unique
  password String
  role     String  // 'customer' or 'seller'
  createdAt DateTime @default(now())

  Customer Customer?
  Seller   Seller?
}

model Customer {
  id       String  @id @default(uuid())
  user     User    @relation(fields: [userId], references: [id])
  userId   String  @unique
  address  String
  phone    String
  orders    Order[]
}

model Seller {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @unique
  storeName   String
  description String?
  rating      Float    @default(0)
  products    Product[]
}

model Product {
  id          String  @id @default(uuid())
  seller      Seller  @relation(fields: [sellerId], references: [id])
  sellerId    String
  name        String
  description String?
  price       Float
  stock       Int
  category    String
  createdAt   DateTime @default(now())
  orderItems  OrderItem[]
}

model Order {
  id         String     @id @default(uuid())
  customer   Customer   @relation(fields: [customerId], references: [id])
  customerId String
  totalPrice Float
  status     String     // 'pending', 'completed', 'cancelled'
  createdAt  DateTime   @default(now())
  orderItems OrderItem[]
  payment     Payment?
}

model OrderItem {
  id        String  @id @default(uuid())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  unitPrice Float
}

model Payment {
  id        String   @id @default(uuid())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String   @unique
  amount    Float
  status    String   // 'pending', 'completed', 'failed'
  createdAt DateTime @default(now())
}
